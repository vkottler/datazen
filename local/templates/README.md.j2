{{python_readme_header_md}}

Good software is composable and configurable, but
the complexity of managing configuration data scales with its complexity.

This package simplifies data curation and partitioning for uses in rendering
templates, or just rendering final sets of serialized data.

# Manifest Schema Reference

{% for schema in schema["entries"] %}
* [{{schema["name"]}}](#{{schema["slug"]}})
{% endfor %}

# Usage

```
$ {{" ".join(help["args"])}}

{{help["stdout"]}}
```

# Manifest Schema

A manifest is provided to `{{package["name"]}}` to establish the set of targets
that should be executed based on defaults or the command-line invocation.

{% for schema in schema["entries"] %}
## {{schema["name"]}}

{{schema["description"]}}

```
{{schema["content"].rstrip()}}
```
{% endfor %}

# Manifest Schema Types

These items may appear in the manifest schema.

{% for schema in schema_types["entries"] %}
## {{schema["name"]}}

{{schema["description"]}}

```
{{schema["content"].rstrip()}}
```
{% endfor %}

{{python_readme_dep_graph_md}}

*This entire document is generated by this package.*
